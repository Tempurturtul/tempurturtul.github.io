$(document).ready(function(){function t(){function t(){var t=$("#sticky-nav-container").offset().top;t>=n?a.removeClass("stick-top"):a.addClass("stick-top")}function o(){for(var t=$("nav ul").find("li a"),o=$(".nav-target"),a="",e=0;e<o.length&&!(n<$(o[e]).offset().top);e++)a="#"+$(o[e]).attr("id");a!==i&&(t.each(function(){$(this).hasClass("current")?$(this).removeClass("current"):$(this).attr("href")===a&&$(this).addClass("current")}),i=a)}var a=$("nav"),n=$(document).scrollTop();t(),o()}function o(){return $("#contact-form").find("button").prop("disabled",!0),$("#contact-form").find("input").prop("disabled",!0),$("#contact-form").find("textarea").prop("disabled",!0),a().done(function(t,o,a){"sent"===t[0].status?n(e,"Message sent!",!0):(n(e,["Message failed to send...",t.message]),$("#contact-form").find("button").prop("disabled",!1),$("#contact-form").find("input").prop("disabled",!1),$("#contact-form").find("textarea").prop("disabled",!1))}).fail(function(t,o,a){n(e,["Message failed to send...",a]),$("#contact-form").find("button").prop("disabled",!1),$("#contact-form").find("input").prop("disabled",!1),$("#contact-form").find("textarea").prop("disabled",!1)}),!1}function a(){var t=$("#name").val().toString()||"Anonymous Contact",o=$("#email").val().toString()||"placeholder@notreal.net",a=$("#message").val().toString();return $.ajax({url:"https://mandrillapp.com/api/1.0/messages/send.json",data:{key:"fBENb5Z2RPSpqs-mTRa_VA",message:{text:a,subject:"Portfolio Contact Form",from_email:o,from_name:t,to:[{email:"tempurturtul@gmail.com",name:"Tempurturtul",type:"to"}]}},method:"POST"})}function n(t,o,a){t.find("p").remove(),Array.isArray(o)?o.forEach(function(o){t.append("<p>"+o+"</p>")}):t.append("<p>"+o+"</p>"),a&&t.removeClass("click-to-hide"),t.removeClass("hidden")}var e=$("#contact-notification"),i="";$(window).on("scroll",t),$("#contact-form").on("submit",o),$(".click-to-hide").on("click",function(){var t=$(this);t.hasClass("click-to-hide")&&t.addClass("hidden")})});
//# sourceMappingURL=data:application/json;base64,
